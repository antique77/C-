/* 
这个程序与前两个练习类似，但更加一般化了。它允许调用程序把逗号放在大数
的内部，去除多余的前导零以及提供一个浮动美元符号等。
这个函数的操作类似于IBM370机器上的Edit和Mark指令。它的原型如下:
char *edit( char *pattern,char const*digits );
它的基本思路很简单。模式(pattem)就是一个图样，处理结果看上去应该像它的样
子。数字字符串中的字符根据这个图样所提供的方式从左向右复制到模式字符串。
数字字符串的第1位有效数字很重要。结果字符串中所有在第1位有效数字之前
的字符都由一个“填充”字符代替，函数将返回一个指针，它所指向的位置正是
第1位有效数字存储在结果字符串中的位置(调用程序可以根据这个返回指针，
把一个浮动美元符号放在这个值左边的毗邻位置)。这个函数的输出结果就像支票
上打印的结果一样一一这个值左边所有的空白由星号或其他字符填充。
在描述这个函数的详细处理过程之前，看一些这个操作的例子是有很帮助的。为
了清晰起见，符号¤用于表示空格。结果字符串中带下划线的那个数字就是返回
值指针所指向的字符(也就是第1位有效数字)，如果结果字符串中不存在带下划
线的字符，说明函数的返回值是个NULL 指针。


*/


#include <stdio.h>
int main()
{
	printf("Hello world\n");
	return (0);
}

